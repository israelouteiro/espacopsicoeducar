{"ast":null,"code":"import styled from 'styled-components';\nimport ReactLoading from 'react-loading';\nimport Lottie from 'react-lottie';\nexport const hexToRgb = hex => {\n  var c;\n\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    c = hex.substring(1).split('');\n\n    if (c.length === 3) {\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n    }\n\n    c = '0x' + c.join('');\n    return [c >> 16 & 255, c >> 8 & 255, c & 255].join(',');\n  }\n\n  return `255,255,255`;\n};\nexport const PrimaryColor = hexToRgb('#06346b');\nexport const Touch = styled.div.attrs({})`         \n    cursor: pointer;\n    &:hover{\n        box-shadow: 0px 1px 3px var(--shadow-color);\n    }\n`;\nexport const Load = styled(ReactLoading).attrs({\n  type: 'spin',\n  color: '#ffffff',\n  height: 20,\n  width: 20\n})`         \n    cursor: pointer;\n    &:hover{\n        box-shadow: 0px 1px 3px var(--shadow-color);\n    }\n`;\nexport const ButtonWhite = styled.div.attrs({})`     \n    min-width: 176px;\n    height: 41px;\n    padding: 0 12px;\n    border-radius: 2px;\n    margin-left: 30px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    cursor: pointer;\n\n    ${props => props.outline ? `\n            border: 1px solid var(--white-color);\n            color: var(--white-color);\n        ` : `\n            background-color: var(--white-color);\n            color: var(--primary-color);\n        `}\n    ${props => props.nomargin ? `\n            margin: 0 !important;\n        ` : ``}\n    ${props => props.centred ? `\n            margin: 12px auto;\n        ` : ` \n        `}\n \n    font-size: 15px;\n    font-weight: 600;\n    text-align: center; \n\n    @media(max-width: 869px){ \n        margin-left: 12px; \n    }\n\n    @media(max-width: 809px){\n        ${props => props.outline ? `\n                min-width: 120px;\n            ` : `\n                margin-left: 0;\n            `}\n    }\n \n    @media(max-width: 767px){  \n        margin-left: 30px; \n    }\n    \n`;\nexport const ButtonColor = styled.div.attrs({})`      \n\n    ${props => props.outline ? `\n            border: 1px solid var(--lightgrey-color);\n            color: var(--lightgrey-color);\n        ` : `\n            background: var(--lightgrey-color);\n            color: var(--white-color);\n        `} \n    height: 45px;\n    max-width: 325px;\n    padding: 0 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 14px;\n    margin-top: 12px;\n\n    cursor: pointer;\n    box-shadow: 0px 2px 2px var(--shadow-color);\n    ${props => props.primary ? `\n            ${props.outline ? `\n                    border: 1px solid var(--primary-color);\n                    color: var(--primary-color);\n                ` : `\n                    background: var(--primary-color);\n                    color: var(--white-color);\n                `}\n        ` : ``}\n    ${props => props.secondary ? ` \n            ${props.outline ? `\n                    border: 1px solid var(--secondary-color);\n                    color: var(--secondary-color);\n                ` : `\n                    background: var(--secondary-color);\n                    color: var(--white-color);\n                `}\n        ` : ``}\n    ${props => props.centred ? `\n            margin: 12px auto;\n        ` : ` \n        `}\n`;\nexport const Animation = styled(Lottie).attrs(props => ({\n  options: {\n    loop: true,\n    autoplay: true,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    },\n    animationData: props.animationData\n  },\n  width: props.width ? props.width : 320\n}))`        \n    max-width: 100%;\n`;","map":{"version":3,"sources":["/Users/israelouteiro/Desktop/EspacoPsicoEducar/src/ui/styled.js"],"names":["styled","ReactLoading","Lottie","hexToRgb","hex","c","test","substring","split","length","join","PrimaryColor","Touch","div","attrs","Load","type","color","height","width","ButtonWhite","props","outline","nomargin","centred","ButtonColor","primary","secondary","Animation","options","loop","autoplay","rendererSettings","preserveAspectRatio","animationData"],"mappings":"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","sourcesContent":["import styled from 'styled-components' \nimport ReactLoading from 'react-loading';\nimport Lottie from 'react-lottie';\n\nexport const hexToRgb = (hex) => {\n    var c;\n    if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\n        c= hex.substring(1).split('');\n        if(c.length === 3){\n            c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c= '0x'+c.join('');\n        return [(c>>16)&255, (c>>8)&255, c&255].join(',') ;\n    }\n    return `255,255,255`\n} \n\nexport const PrimaryColor = hexToRgb('#06346b')\n\nexport const Touch = styled.div.attrs({ \n})`         \n    cursor: pointer;\n    &:hover{\n        box-shadow: 0px 1px 3px var(--shadow-color);\n    }\n`;\n\nexport const Load = styled(ReactLoading).attrs({ \n    type:'spin',\n    color:'#ffffff',\n    height:20,\n    width:20\n})`         \n    cursor: pointer;\n    &:hover{\n        box-shadow: 0px 1px 3px var(--shadow-color);\n    }\n`;\n\nexport const ButtonWhite = styled.div.attrs({ \n})`     \n    min-width: 176px;\n    height: 41px;\n    padding: 0 12px;\n    border-radius: 2px;\n    margin-left: 30px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    cursor: pointer;\n\n    ${\n        props => props.outline ? `\n            border: 1px solid var(--white-color);\n            color: var(--white-color);\n        ` : `\n            background-color: var(--white-color);\n            color: var(--primary-color);\n        `\n    }\n    ${\n        props => props.nomargin ? `\n            margin: 0 !important;\n        ` : ``\n    }\n    ${\n        props => props.centred ? `\n            margin: 12px auto;\n        ` : ` \n        `\n    }\n \n    font-size: 15px;\n    font-weight: 600;\n    text-align: center; \n\n    @media(max-width: 869px){ \n        margin-left: 12px; \n    }\n\n    @media(max-width: 809px){\n        ${\n            props => props.outline ? `\n                min-width: 120px;\n            ` : `\n                margin-left: 0;\n            `\n        }\n    }\n \n    @media(max-width: 767px){  \n        margin-left: 30px; \n    }\n    \n`;\n    \nexport const ButtonColor = styled.div.attrs({ \n})`      \n\n    ${\n        props => props.outline ? `\n            border: 1px solid var(--lightgrey-color);\n            color: var(--lightgrey-color);\n        ` : `\n            background: var(--lightgrey-color);\n            color: var(--white-color);\n        `\n    } \n    height: 45px;\n    max-width: 325px;\n    padding: 0 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 14px;\n    margin-top: 12px;\n\n    cursor: pointer;\n    box-shadow: 0px 2px 2px var(--shadow-color);\n    ${\n        props => props.primary ? `\n            ${\n                props.outline ? `\n                    border: 1px solid var(--primary-color);\n                    color: var(--primary-color);\n                ` : `\n                    background: var(--primary-color);\n                    color: var(--white-color);\n                `\n            }\n        ` : ``\n    }\n    ${\n        props => props.secondary ? ` \n            ${\n                props.outline ? `\n                    border: 1px solid var(--secondary-color);\n                    color: var(--secondary-color);\n                ` : `\n                    background: var(--secondary-color);\n                    color: var(--white-color);\n                `\n            }\n        ` : ``\n    }\n    ${\n        props => props.centred ? `\n            margin: 12px auto;\n        ` : ` \n        `\n    }\n`;\n \nexport const Animation = styled(Lottie).attrs( props => ({  \n    options:{\n        loop: true,\n        autoplay: true, \n        rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n        },\n        animationData: props.animationData\n    }, \n    width: props.width ? props.width : 320\n}))`        \n    max-width: 100%;\n`;  "]},"metadata":{},"sourceType":"module"}