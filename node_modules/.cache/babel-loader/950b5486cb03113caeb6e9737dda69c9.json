{"ast":null,"code":"var _jsxFileName = \"/Users/israelouteiro/Desktop/EspacoPsicoEducar/src/screens/Authentication/Register/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Input from 'components/Input';\nimport { FormTitle, FormText, FormSpacer, RegisterCall } from './styled';\nimport Button from \"components/Button\";\nimport ContainerUnauthenticated from \"containers/Unauthenticated\";\nimport { DoRegister } from \"services/authentication\";\nimport { exposeStrapiError } from \"utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const history = useHistory();\n\n  const navigate = to => history.push(`/${to}`);\n\n  const [loading, setLoading] = useState(false);\n  const [form, setForm] = useState({});\n\n  const formValue = ref => {\n    return form !== null && form !== void 0 && form[ref] ? form === null || form === void 0 ? void 0 : form[ref] : '';\n  };\n\n  const changeForm = (value, ref) => {\n    setForm({ ...form,\n      [ref]: value\n    });\n  };\n\n  const valid = function () {\n    let verbose = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!formValue('name') || !formValue('name').length) {\n      if (verbose) {\n        toast.error('Preencha o campo: Nome');\n      }\n\n      return false;\n    }\n\n    if (!formValue('email') || !formValue('email').length) {\n      if (verbose) {\n        toast.error('Preencha o campo: Email');\n      }\n\n      return false;\n    }\n\n    if (!formValue('password') || !formValue('password').length) {\n      if (verbose) {\n        toast.error('Preencha o campo: Senha');\n      }\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const action = async () => {\n    var _form$email, _form$email2;\n\n    if (!valid(true)) {\n      return;\n    }\n\n    setLoading(true);\n    const result = await DoRegister({ ...form,\n      username: (_form$email = form.email) === null || _form$email === void 0 ? void 0 : _form$email.replace(/ /g, ''),\n      email: (_form$email2 = form.email) === null || _form$email2 === void 0 ? void 0 : _form$email2.replace(/ /g, ''),\n      confirmed: true,\n      blocked: false\n    });\n    setLoading(false);\n\n    if (result && !exposeStrapiError(result)) {\n      completeLogin();\n    }\n  };\n\n  const completeLogin = () => {\n    toast.success('Conta criada com sucesso');\n    navigate('login');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ContainerUnauthenticated, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Novo por aqui?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormText, {\n        children: \"Cadastre-se gr\\xE1tis :)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Nome\",\n        value: formValue('name'),\n        onChange: e => changeForm(e.target.value, 'name')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormSpacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"E-mail\",\n        value: formValue('email'),\n        onChange: e => changeForm(e.target.value, 'email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormSpacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Senha\",\n        type: \"password\",\n        value: formValue('password'),\n        onChange: e => changeForm(e.target.value, 'password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormSpacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        loading: loading,\n        onClick: action,\n        children: \"Criar conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RegisterCall, {\n        children: \" J\\xE1 possui uma conta? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        outline: true,\n        onClick: () => navigate('login'),\n        children: \"Fa\\xE7a o login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"mIMDLwGi3PrGQ81ubfsoXFJmAJY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/israelouteiro/Desktop/EspacoPsicoEducar/src/screens/Authentication/Register/index.js"],"names":["React","useState","useHistory","toast","Input","FormTitle","FormText","FormSpacer","RegisterCall","Button","ContainerUnauthenticated","DoRegister","exposeStrapiError","Register","history","navigate","to","push","loading","setLoading","form","setForm","formValue","ref","changeForm","value","valid","verbose","length","error","action","result","username","email","replace","confirmed","blocked","completeLogin","success","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"; \nimport { useHistory } from 'react-router-dom'; \nimport { toast } from 'react-toastify';\n\nimport Input from 'components/Input'\n\nimport { \n    FormTitle,\n    FormText,\n    FormSpacer,\n    RegisterCall\n} from './styled'\n\nimport Button from \"components/Button\";\n\nimport ContainerUnauthenticated from \"containers/Unauthenticated\";\nimport { DoRegister } from \"services/authentication\";\nimport { exposeStrapiError } from \"utils\"; \n\nexport default function Register(){ \n\n    const history = useHistory();\n    const navigate = to => history.push(`/${ to }`);\n\n    const [ loading, setLoading ] = useState(false) \n    \n    const [ form, setForm ] = useState({})\n    const formValue = ref => { return form?.[ref] ? form?.[ref] : '' ;}\n    const changeForm = ( value, ref ) => { setForm({ ...form, [ref]: value }) ;} \n\n    const valid = (verbose = false) => {  \n\n        if(!formValue('name') || !formValue('name').length){ \n            if(verbose){ toast.error('Preencha o campo: Nome') ;}\n            return false; \n        }  \n\n        if(!formValue('email') || !formValue('email').length){ \n            if(verbose){ toast.error('Preencha o campo: Email') ;}\n            return false; \n        }  \n\n        if(!formValue('password') || !formValue('password').length){ \n            if(verbose){ toast.error('Preencha o campo: Senha') ;}\n            return false; \n        }  \n\n        return true\n    } \n\n    const action = async () => {\n        if(!valid(true)){ return ;}\n        setLoading(true)\n        \n        const result = await DoRegister({\n            ...form, \n            username: form.email?.replace(/ /g,''),\n            email: form.email?.replace(/ /g,''),\n            confirmed:true,\n            blocked:false\n        })  \n        \n        setLoading(false)\n        if(result && !exposeStrapiError(result)){\n            completeLogin()\n        } \n    }\n\n    const completeLogin = () => {\n        toast.success('Conta criada com sucesso'); \n        navigate('login')\n    } \n\n \n    return ( \n        <>  \n            <ContainerUnauthenticated> \n                <FormTitle>Novo por aqui?</FormTitle>\n                <FormText>Cadastre-se grátis :)</FormText> \n                <Input placeholder=\"Nome\" value={formValue('name')} onChange={e => changeForm(e.target.value, 'name')} /> \n                <FormSpacer />\n                <Input placeholder=\"E-mail\" value={formValue('email')} onChange={e => changeForm(e.target.value, 'email')} /> \n                <FormSpacer />\n                <Input placeholder=\"Senha\" type=\"password\" value={formValue('password')} onChange={e => changeForm(e.target.value, 'password')}  />    \n                <FormSpacer /> \n                <Button primary loading={loading} onClick={action}>Criar conta</Button> \n                <RegisterCall> Já possui uma conta? </RegisterCall>\n                <Button primary outline onClick={() => navigate('login')}>Faça o login</Button> \n            </ContainerUnauthenticated> \n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}