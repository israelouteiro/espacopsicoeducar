{"ast":null,"code":"var _jsxFileName = \"/Users/israelouteiro/Desktop/EspacoPsicoEducar/src/screens/Authentication/Login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Input from 'components/Input';\nimport { FormTitle, FormText, FormSpacer, RegisterForgot, ForgotLink, RegisterCall } from './styled';\nimport ContainerUnauthenticated from \"containers/Unauthenticated\";\nimport { CoreContext } from \"context/CoreContext\";\nimport { DoLogin } from \"services/authentication\";\nimport { exposeStrapiError } from \"utils\";\nimport Button from \"components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const history = useHistory();\n\n  const navigate = to => history.push(`/${to}`);\n\n  const [loading, setLoading] = useState(false);\n  const {\n    setUser\n  } = useContext(CoreContext);\n  const [form, setForm] = useState({});\n\n  const formValue = ref => {\n    return form !== null && form !== void 0 && form[ref] ? form === null || form === void 0 ? void 0 : form[ref] : '';\n  };\n\n  const changeForm = (value, ref) => {\n    setForm({ ...form,\n      [ref]: value\n    });\n  };\n\n  const valid = function () {\n    let verbose = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!formValue('identifier') || !formValue('identifier').length) {\n      if (verbose) {\n        toast.error('Preencha o campo: Email');\n      }\n\n      return false;\n    }\n\n    if (!formValue('password') || !formValue('password').length) {\n      if (verbose) {\n        toast.error('Preencha o campo: Senha');\n      }\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const login = async () => {\n    var _form$identifier;\n\n    if (!valid(true)) {\n      return;\n    }\n\n    setLoading(true);\n    const result = await DoLogin({ ...form,\n      identifier: (_form$identifier = form.identifier) === null || _form$identifier === void 0 ? void 0 : _form$identifier.replace(/ /g, '')\n    });\n    setLoading(false);\n\n    if (result && !exposeStrapiError(result)) {\n      completeLogin(result);\n    }\n  };\n\n  const completeLogin = result => {\n    if (result !== null && result !== void 0 && result.user) {\n      setUser(result.user);\n    }\n\n    navigate('dashboard');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ContainerUnauthenticated, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Bem-vindo de volta!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormText, {\n        children: \"Entre com seus dados do cadastro para acessar sua conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"E-mail\",\n        value: formValue('identifier'),\n        onChange: e => changeForm(e.target.value, 'identifier')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormSpacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Senha\",\n        type: \"password\",\n        value: formValue('password'),\n        onChange: e => changeForm(e.target.value, 'password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RegisterForgot, {\n        children: [\"Esqueceu a senha?\", /*#__PURE__*/_jsxDEV(ForgotLink, {\n          onClick: () => navigate('forgot'),\n          children: \"Recupere sua senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormSpacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        loading: loading,\n        onClick: login,\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RegisterCall, {\n        children: \" Ainda n\\xE3o tem conta? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        outline: true,\n        onClick: () => navigate('register'),\n        children: \"Criar uma conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"H578nrK0OPgURrZjhM4qz67OBbc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/israelouteiro/Desktop/EspacoPsicoEducar/src/screens/Authentication/Login/index.js"],"names":["React","useContext","useState","useHistory","toast","Input","FormTitle","FormText","FormSpacer","RegisterForgot","ForgotLink","RegisterCall","ContainerUnauthenticated","CoreContext","DoLogin","exposeStrapiError","Button","Login","history","navigate","to","push","loading","setLoading","setUser","form","setForm","formValue","ref","changeForm","value","valid","verbose","length","error","login","result","identifier","replace","completeLogin","user","e","target"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\"; \nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport Input from 'components/Input'\n\nimport { \n    FormTitle,\n    FormText,\n    FormSpacer,\n    RegisterForgot,\n    ForgotLink,\n    RegisterCall\n} from './styled' \n\nimport ContainerUnauthenticated from \"containers/Unauthenticated\";\nimport { CoreContext } from \"context/CoreContext\";\nimport { DoLogin } from \"services/authentication\";\nimport { exposeStrapiError } from \"utils\";\nimport Button from \"components/Button\";\n\nexport default function Login(){ \n    const history = useHistory();\n    const navigate = to => history.push(`/${ to }`);\n\n    const [ loading, setLoading ] = useState(false)\n    const { setUser } = useContext(CoreContext)\n    \n    const [ form, setForm ] = useState({})\n    const formValue = ref => { return form?.[ref] ? form?.[ref] : '' ;}\n    const changeForm = ( value, ref ) => { setForm({ ...form, [ref]: value }) ;} \n\n    const valid = (verbose = false) => {  \n\n        if(!formValue('identifier') || !formValue('identifier').length){ \n            if(verbose){ toast.error('Preencha o campo: Email') ;}\n            return false; \n        }  \n\n        if(!formValue('password') || !formValue('password').length){ \n            if(verbose){ toast.error('Preencha o campo: Senha') ;}\n            return false; \n        }  \n\n        return true\n    } \n\n    const login = async () => {\n        if(!valid(true)){ return ;}\n        setLoading(true)\n        const result = await DoLogin({ ...form, identifier: form.identifier?.replace(/ /g,'') })  \n        setLoading(false)\n        if(result && !exposeStrapiError(result)){\n            completeLogin(result)\n        } \n    }\n\n    const completeLogin = (result) => {\n        if(result?.user){ setUser(result.user) }\n        navigate('dashboard')\n    }  \n \n    return ( \n        <>  \n            <ContainerUnauthenticated> \n                <FormTitle>Bem-vindo de volta!</FormTitle>\n                <FormText>Entre com seus dados do cadastro para acessar sua conta</FormText> \n                <Input placeholder=\"E-mail\" value={formValue('identifier')} onChange={e => changeForm(e.target.value, 'identifier')} /> \n                <FormSpacer />\n                <Input placeholder=\"Senha\" type=\"password\" value={formValue('password')} onChange={e => changeForm(e.target.value, 'password')} />   \n                <RegisterForgot>\n                    Esqueceu a senha?\n                    <ForgotLink onClick={() => navigate('forgot')}>Recupere sua senha</ForgotLink>\n                </RegisterForgot> \n                <FormSpacer /> \n                <Button primary loading={loading} onClick={login}>Entrar</Button>\n                <RegisterCall> Ainda não tem conta? </RegisterCall>\n                <Button primary outline onClick={() => navigate('register')}>Criar uma conta</Button> \n            </ContainerUnauthenticated> \n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}