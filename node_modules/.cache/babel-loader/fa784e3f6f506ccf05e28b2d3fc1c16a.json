{"ast":null,"code":"var _jsxFileName = \"/Users/israelouteiro/Desktop/EspacoPsicoEducar/src/screens/Authentication/Forgot/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Input from 'components/Input';\nimport { FormTitle, FormText, FormSpacer } from './styled';\nimport Button from \"components/Button\";\nimport ContainerUnauthenticated from \"containers/Unauthenticated\";\nimport { DoForgotPassword } from \"services/authentication\";\nimport { exposeStrapiError } from \"utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Forgot() {\n  _s();\n\n  const history = useHistory();\n\n  const navigate = to => history.push(`/${to}`);\n\n  const [loading, setLoading] = useState(false);\n  const [form, setForm] = useState({});\n\n  const formValue = ref => {\n    return form !== null && form !== void 0 && form[ref] ? form === null || form === void 0 ? void 0 : form[ref] : '';\n  };\n\n  const changeForm = (value, ref) => {\n    setForm({ ...form,\n      [ref]: value\n    });\n  };\n\n  const valid = function () {\n    let verbose = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!formValue('email') || !formValue('email').length) {\n      if (verbose) {\n        toast.error('Preencha o campo: Email');\n      }\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const action = async () => {\n    var _formValue;\n\n    if (!valid(true)) {\n      return;\n    }\n\n    setLoading(true);\n    const result = await DoForgotPassword({\n      email: (_formValue = formValue('email')) === null || _formValue === void 0 ? void 0 : _formValue.replace(/ /g, '')\n    });\n    setLoading(false);\n\n    if (result && !exposeStrapiError(result)) {\n      completNext();\n    }\n  };\n\n  const completNext = () => {\n    toast.success('Instruções para recuperar senha foram enviadas ao seu email');\n    navigate('login');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ContainerUnauthenticated, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Esqueceu a senha?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormText, {\n        children: \"Informe seu email para recuperar a senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"E-mail\",\n        value: formValue('email'),\n        onChange: e => changeForm(e.target.value, 'email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormSpacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        loading: loading,\n        onClick: action,\n        children: \"Criar conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        outline: true,\n        onClick: () => history.goBack(),\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Forgot, \"mIMDLwGi3PrGQ81ubfsoXFJmAJY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Forgot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forgot\");","map":{"version":3,"sources":["/Users/israelouteiro/Desktop/EspacoPsicoEducar/src/screens/Authentication/Forgot/index.js"],"names":["React","useState","useHistory","toast","Input","FormTitle","FormText","FormSpacer","Button","ContainerUnauthenticated","DoForgotPassword","exposeStrapiError","Forgot","history","navigate","to","push","loading","setLoading","form","setForm","formValue","ref","changeForm","value","valid","verbose","length","error","action","result","email","replace","completNext","success","e","target","goBack"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SACIC,SADJ,EAEIC,QAFJ,EAGIC,UAHJ,QAIO,UAJP;AAOA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,iBAAT,QAAkC,OAAlC;;;AAEA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAC5B,QAAMC,OAAO,GAAGX,UAAU,EAA1B;;AACA,QAAMY,QAAQ,GAAGC,EAAE,IAAIF,OAAO,CAACG,IAAR,CAAc,IAAID,EAAI,EAAtB,CAAvB;;AAEA,QAAM,CAAEE,OAAF,EAAWC,UAAX,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAAEkB,IAAF,EAAQC,OAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMoB,SAAS,GAAGC,GAAG,IAAI;AAAE,WAAOH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAGG,GAAH,CAAJ,GAAcH,IAAd,aAAcA,IAAd,uBAAcA,IAAI,CAAGG,GAAH,CAAlB,GAA4B,EAAnC;AAAwC,GAAnE;;AACA,QAAMC,UAAU,GAAG,CAAEC,KAAF,EAASF,GAAT,KAAkB;AAAEF,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACG,GAAD,GAAOE;AAAlB,KAAD,CAAP;AAAqC,GAA5E;;AAEA,QAAMC,KAAK,GAAG,YAAqB;AAAA,QAApBC,OAAoB,uEAAV,KAAU;;AAE/B,QAAG,CAACL,SAAS,CAAC,OAAD,CAAV,IAAuB,CAACA,SAAS,CAAC,OAAD,CAAT,CAAmBM,MAA9C,EAAqD;AACjD,UAAGD,OAAH,EAAW;AAAEvB,QAAAA,KAAK,CAACyB,KAAN,CAAY,yBAAZ;AAAyC;;AACtD,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH,GARD;;AAUA,QAAMC,MAAM,GAAG,YAAY;AAAA;;AACvB,QAAG,CAACJ,KAAK,CAAC,IAAD,CAAT,EAAgB;AAAE;AAAS;;AAC3BP,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMY,MAAM,GAAG,MAAMpB,gBAAgB,CAAC;AAAEqB,MAAAA,KAAK,gBAACV,SAAS,CAAC,OAAD,CAAV,+CAAC,WAAoBW,OAApB,CAA4B,IAA5B,EAAiC,EAAjC;AAAR,KAAD,CAArC;AAEAd,IAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,QAAGY,MAAM,IAAI,CAACnB,iBAAiB,CAACmB,MAAD,CAA/B,EAAwC;AACpCG,MAAAA,WAAW;AACd;AACJ,GAVD;;AAYA,QAAMA,WAAW,GAAG,MAAM;AACtB9B,IAAAA,KAAK,CAAC+B,OAAN,CAAc,6DAAd;AACApB,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACH,GAHD;;AAMA,sBACI;AAAA,2BACI,QAAC,wBAAD;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAC,QAAnB;AAA4B,QAAA,KAAK,EAAEO,SAAS,CAAC,OAAD,CAA5C;AAAuD,QAAA,QAAQ,EAAEc,CAAC,IAAIZ,UAAU,CAACY,CAAC,CAACC,MAAF,CAASZ,KAAV,EAAiB,OAAjB;AAAhF;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,OAAO,EAAEP,OAAzB;AAAkC,QAAA,OAAO,EAAEY,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,OAAO,MAAvB;AAAwB,QAAA,OAAO,EAAE,MAAMhB,OAAO,CAACwB,MAAR,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH;;GAlDuBzB,M;UACJV,U;;;KADIU,M","sourcesContent":["import React, { useState } from \"react\"; \nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport Input from 'components/Input'\n\nimport { \n    FormTitle,\n    FormText,\n    FormSpacer \n} from './styled'\n\n\nimport Button from \"components/Button\";\n\nimport ContainerUnauthenticated from \"containers/Unauthenticated\";\nimport { DoForgotPassword } from \"services/authentication\";\nimport { exposeStrapiError } from \"utils\";\n\nexport default function Forgot(){ \n    const history = useHistory();\n    const navigate = to => history.push(`/${ to }`);\n\n    const [ loading, setLoading ] = useState(false) \n    \n    const [ form, setForm ] = useState({})\n    const formValue = ref => { return form?.[ref] ? form?.[ref] : '' ;}\n    const changeForm = ( value, ref ) => { setForm({ ...form, [ref]: value }) ;} \n\n    const valid = (verbose = false) => {  \n              \n        if(!formValue('email') || !formValue('email').length){ \n            if(verbose){ toast.error('Preencha o campo: Email') ;}\n            return false; \n        }   \n\n        return true\n    } \n\n    const action = async () => {\n        if(!valid(true)){ return ;}\n        setLoading(true)\n        \n        const result = await DoForgotPassword({ email:formValue('email')?.replace(/ /g,'') })   \n        \n        setLoading(false)\n        if(result && !exposeStrapiError(result)){\n            completNext()\n        } \n    }\n\n    const completNext = () => {\n        toast.success('Instruções para recuperar senha foram enviadas ao seu email'); \n        navigate('login')\n    } \n\n \n    return ( \n        <>  \n            <ContainerUnauthenticated> \n                <FormTitle>Esqueceu a senha?</FormTitle>\n                <FormText>Informe seu email para recuperar a senha</FormText> \n                <Input placeholder=\"E-mail\" value={formValue('email')} onChange={e => changeForm(e.target.value, 'email')}  /> \n                <FormSpacer />\n                <Button primary loading={loading} onClick={action} >Criar conta</Button> \n                <Button primary outline onClick={() => history.goBack()}>Voltar</Button>  \n            </ContainerUnauthenticated> \n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}