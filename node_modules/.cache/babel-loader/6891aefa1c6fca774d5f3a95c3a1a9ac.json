{"ast":null,"code":"var _jsxFileName = \"/Users/israelouteiro/Desktop/EspacoPsicoEducar/src/screens/Authentication/CreatePassword/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Input from 'components/Input';\nimport { FormTitle, FormText, FormSpacer } from './styled';\nimport Button from \"components/Button\";\nimport ContainerUnauthenticated from \"containers/Unauthenticated\";\nimport { DoResetPassword } from \"services/authentication\";\nimport { exposeStrapiError } from \"utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreatePassword() {\n  _s();\n\n  const history = useHistory();\n\n  const navigate = to => history.push(`/${to}`);\n\n  const params = new URLSearchParams(window.location.search);\n  const [loading, setLoading] = useState(false);\n  const [form, setForm] = useState({});\n\n  const formValue = ref => {\n    return form !== null && form !== void 0 && form[ref] ? form === null || form === void 0 ? void 0 : form[ref] : '';\n  };\n\n  const changeForm = (value, ref) => {\n    setForm({ ...form,\n      [ref]: value\n    });\n  };\n\n  const valid = function () {\n    let verbose = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!formValue('password') || !formValue('password').length) {\n      if (verbose) {\n        toast.error('Preencha o campo: Nova senha');\n      }\n\n      return false;\n    }\n\n    if (!formValue('cpassword') || !formValue('cpassword').length) {\n      if (verbose) {\n        toast.error('Preencha o campo: Confirmar nova senha');\n      }\n\n      return false;\n    }\n\n    if (formValue('password') !== formValue('cpassword')) {\n      if (verbose) {\n        toast.error('Nova senha e confirmação da nova senha não são iguais');\n      }\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const action = async () => {\n    if (!valid(true)) {\n      return;\n    }\n\n    setLoading(true);\n    const result = await DoResetPassword({\n      code: params.get('code'),\n      password: formValue('password'),\n      passwordConfirmation: formValue('cpassword')\n    });\n    setLoading(false);\n\n    if (result && !exposeStrapiError(result)) {\n      completNext();\n    }\n  };\n\n  const completNext = () => {\n    toast.success('Senha criada com sucesso');\n    navigate('login');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ContainerUnauthenticated, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Cria sua nova senha!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormText, {\n        children: \"Informe sua nova senha no campo abaixo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Nova Senha\",\n        type: \"password\",\n        value: formValue('password'),\n        onChange: e => changeForm(e.target.value, 'password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormSpacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Confirmar nova Senha\",\n        type: \"password\",\n        value: formValue('cpassword'),\n        onChange: e => changeForm(e.target.value, 'cpassword')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormSpacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        loading: loading,\n        onClick: action,\n        children: \"Criar senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        outline: true,\n        onClick: () => navigate('login'),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(CreatePassword, \"mIMDLwGi3PrGQ81ubfsoXFJmAJY=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreatePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePassword\");","map":{"version":3,"sources":["/Users/israelouteiro/Desktop/EspacoPsicoEducar/src/screens/Authentication/CreatePassword/index.js"],"names":["React","useState","useHistory","toast","Input","FormTitle","FormText","FormSpacer","Button","ContainerUnauthenticated","DoResetPassword","exposeStrapiError","CreatePassword","history","navigate","to","push","params","URLSearchParams","window","location","search","loading","setLoading","form","setForm","formValue","ref","changeForm","value","valid","verbose","length","error","action","result","code","get","password","passwordConfirmation","completNext","success","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"; \nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport Input from 'components/Input'\n\nimport { \n    FormTitle,\n    FormText,\n    FormSpacer\n} from './styled' \n\nimport Button from \"components/Button\";\n\nimport ContainerUnauthenticated from \"containers/Unauthenticated\";\nimport { DoResetPassword } from \"services/authentication\";\nimport { exposeStrapiError } from \"utils\";\n\nexport default function CreatePassword(){ \n    const history = useHistory();\n    const navigate = to => history.push(`/${ to }`);\n\n    const params = new URLSearchParams(window.location.search)\n    const [ loading, setLoading ] = useState(false) \n    \n    const [ form, setForm ] = useState({})\n    const formValue = ref => { return form?.[ref] ? form?.[ref] : '' ;}\n    const changeForm = ( value, ref ) => { setForm({ ...form, [ref]: value }) ;} \n\n    const valid = (verbose = false) => { \n\n        if(!formValue('password') || !formValue('password').length){ \n            if(verbose){ toast.error('Preencha o campo: Nova senha') ;}\n            return false; \n        } \n        \n        if(!formValue('cpassword') || !formValue('cpassword').length){ \n            if(verbose){ toast.error('Preencha o campo: Confirmar nova senha') ;}\n            return false; \n        } \n        \n        if( formValue('password') !== formValue('cpassword')){ \n            if(verbose){ toast.error('Nova senha e confirmação da nova senha não são iguais') ;}\n            return false; \n        } \n\n        return true\n    }\n\n    const action = async () => {\n        if(!valid(true)){ return ;}\n        setLoading(true)\n        \n        const result =  await DoResetPassword({\n            code: params.get('code'),\n            password: formValue('password'),\n            passwordConfirmation: formValue('cpassword')\n        })   \n        \n        setLoading(false)\n        if(result && !exposeStrapiError(result)){\n            completNext()\n        } \n    }\n\n    const completNext = () => {\n        toast.success('Senha criada com sucesso'); \n        navigate('login')\n    } \n \n    return ( \n        <>  \n            <ContainerUnauthenticated> \n                <FormTitle>Cria sua nova senha!</FormTitle>\n                <FormText>Informe sua nova senha no campo abaixo</FormText> \n                <Input placeholder=\"Nova Senha\" type=\"password\" value={formValue('password')} onChange={e => changeForm(e.target.value, 'password')} />   \n                <FormSpacer />\n                <Input placeholder=\"Confirmar nova Senha\" type=\"password\" value={formValue('cpassword')} onChange={e => changeForm(e.target.value, 'cpassword')} />   \n                <FormSpacer />\n                <Button primary loading={loading} onClick={action}>Criar senha</Button> \n                <Button primary outline onClick={() => navigate('login')}>Cancelar</Button> \n            </ContainerUnauthenticated> \n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}