{"ast":null,"code":"import * as CryptoJS from \"crypto-js\";\nexport const storageKey = 'EspacoPsicoEducar';\nexport const SaveObject = (key, value) => {\n  return SaveStorage(key, JSON.stringify(value));\n};\n_c = SaveObject;\nexport const ReadObject = key => {\n  return JSON.parse(ReadStorage(key));\n};\n_c2 = ReadObject;\n\nconst Crypt = value => {\n  return CryptoJS.AES.encrypt(value, storageKey).toString();\n};\n\n_c3 = Crypt;\n\nconst Decrypt = cvalue => {\n  const bytes = CryptoJS.AES.decrypt(cvalue, storageKey);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\n\n_c4 = Decrypt;\nexport const SaveStorage = (key, value) => {\n  const cvalue = Crypt(value);\n\n  try {\n    return localStorage.setItem(`${storageKey}::${key}`, cvalue);\n  } catch (e) {\n    return sessionStorage.setItem(`${storageKey}::${key}`, cvalue);\n  }\n};\n_c5 = SaveStorage;\nexport const ReadStorage = key => {\n  let cvalue = ``;\n\n  try {\n    cvalue = localStorage.getItem(`${storageKey}::${key}`);\n  } catch (e) {\n    cvalue = sessionStorage.getItem(`${storageKey}::${key}`);\n  }\n\n  if (cvalue !== '' && cvalue !== null) {\n    return Decrypt(cvalue);\n  }\n\n  return false;\n};\n_c6 = ReadStorage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SaveObject\");\n$RefreshReg$(_c2, \"ReadObject\");\n$RefreshReg$(_c3, \"Crypt\");\n$RefreshReg$(_c4, \"Decrypt\");\n$RefreshReg$(_c5, \"SaveStorage\");\n$RefreshReg$(_c6, \"ReadStorage\");","map":{"version":3,"sources":["/Users/israelouteiro/Desktop/EspacoPsicoEducar/src/services/storage.js"],"names":["CryptoJS","storageKey","SaveObject","key","value","SaveStorage","JSON","stringify","ReadObject","parse","ReadStorage","Crypt","AES","encrypt","toString","Decrypt","cvalue","bytes","decrypt","enc","Utf8","localStorage","setItem","e","sessionStorage","getItem"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,WAA1B;AAEA,OAAO,MAAMC,UAAU,GAAG,mBAAnB;AAEP,OAAO,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACtC,SAAOC,WAAW,CAACF,GAAD,EAAMG,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAN,CAAlB;AACH,CAFM;KAAMF,U;AAIb,OAAO,MAAMM,UAAU,GAAIL,GAAD,IAAS;AAC/B,SAAOG,IAAI,CAACG,KAAL,CAAYC,WAAW,CAACP,GAAD,CAAvB,CAAP;AACH,CAFM;MAAMK,U;;AAIb,MAAMG,KAAK,GAAIP,KAAD,IAAW;AACrB,SAAOJ,QAAQ,CAACY,GAAT,CAAaC,OAAb,CAAqBT,KAArB,EAA4BH,UAA5B,EAAwCa,QAAxC,EAAP;AACH,CAFD;;MAAMH,K;;AAIN,MAAMI,OAAO,GAAIC,MAAD,IAAY;AACxB,QAAMC,KAAK,GAAIjB,QAAQ,CAACY,GAAT,CAAaM,OAAb,CAAqBF,MAArB,EAA6Bf,UAA7B,CAAf;AACA,SAAOgB,KAAK,CAACH,QAAN,CAAed,QAAQ,CAACmB,GAAT,CAAaC,IAA5B,CAAP;AACH,CAHD;;MAAML,O;AAKN,OAAO,MAAMV,WAAW,GAAG,CAACF,GAAD,EAAMC,KAAN,KAAgB;AACvC,QAAMY,MAAM,GAAGL,KAAK,CAACP,KAAD,CAApB;;AACA,MAAI;AACA,WAAOiB,YAAY,CAACC,OAAb,CAAsB,GAAGrB,UAAY,KAAKE,GAAK,EAA/C,EAAkDa,MAAlD,CAAP;AACH,GAFD,CAEE,OAAOO,CAAP,EAAU;AACR,WAAOC,cAAc,CAACF,OAAf,CAAwB,GAAGrB,UAAY,KAAKE,GAAK,EAAjD,EAAoDa,MAApD,CAAP;AACH;AACJ,CAPM;MAAMX,W;AASb,OAAO,MAAMK,WAAW,GAAIP,GAAD,IAAS;AAChC,MAAIa,MAAM,GAAI,EAAd;;AACA,MAAI;AACAA,IAAAA,MAAM,GAAGK,YAAY,CAACI,OAAb,CAAsB,GAAGxB,UAAY,KAAKE,GAAK,EAA/C,CAAT;AACH,GAFD,CAEE,OAAOoB,CAAP,EAAU;AACRP,IAAAA,MAAM,GAAGQ,cAAc,CAACC,OAAf,CAAwB,GAAGxB,UAAY,KAAKE,GAAK,EAAjD,CAAT;AACH;;AACD,MAAIa,MAAM,KAAK,EAAX,IAAiBA,MAAM,KAAK,IAAhC,EAAsC;AAClC,WAAOD,OAAO,CAACC,MAAD,CAAd;AACH;;AACD,SAAO,KAAP;AACH,CAXM;MAAMN,W","sourcesContent":["import * as CryptoJS from \"crypto-js\";\n\nexport const storageKey = 'EspacoPsicoEducar'\n\nexport const SaveObject = (key, value) => {\n    return SaveStorage(key, JSON.stringify(value))\n}\n\nexport const ReadObject = (key) => {\n    return JSON.parse( ReadStorage(key))\n} \n\nconst Crypt = (value) => {\n    return CryptoJS.AES.encrypt(value, storageKey).toString()\n}\n\nconst Decrypt = (cvalue) => { \n    const bytes  = CryptoJS.AES.decrypt(cvalue, storageKey);\n    return bytes.toString(CryptoJS.enc.Utf8);\n}\n\nexport const SaveStorage = (key, value) => {\n    const cvalue = Crypt(value)\n    try {\n        return localStorage.setItem(`${ storageKey }::${ key }`, cvalue);\n    } catch (e) {\n        return sessionStorage.setItem(`${ storageKey }::${ key }`, cvalue);\n    }\n} \n\nexport const ReadStorage = (key) => {\n    let cvalue = ``\n    try {\n        cvalue = localStorage.getItem(`${ storageKey }::${ key }`); \n    } catch (e) {\n        cvalue = sessionStorage.getItem(`${ storageKey }::${ key }`);\n    }  \n    if( cvalue !== '' && cvalue !== null ){\n        return Decrypt(cvalue);\n    }\n    return false\n}"]},"metadata":{},"sourceType":"module"}